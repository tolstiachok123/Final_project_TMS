<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.1.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.test</groupId>
    <artifactId>demo</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>demo</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <java.version>1.8</java.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.modelmapper/modelmapper -->
        <dependency>
            <groupId>org.modelmapper</groupId>
            <artifactId>modelmapper</artifactId>
            <version>2.3.8</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.19</version>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.9.2</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.9.2</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>2.3.4.RELEASE</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.liquibase/liquibase-core -->
        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
            <version>4.2.0</version>
        </dependency>


    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>2.1.0</version>
                <configuration>
                    <from>
                        <image>maven:3.6.3-openjdk-16</image>
                        <auth>
                            <username>tolstiachok123</username>
                            <password>Pravilavoini1</password>
                        </auth>
                    </from>
                    <to>
                        <image>tolstiachok123/alcomarket</image>
                        <auth>
                            <username>tolstiachok123</username>
                            <password>Pravilavoini1</password>
                        </auth>
                    </to>
                    <container>
                        <jvmFlags>
                            <jvmFlag>-Xms2703m</jvmFlag>
                            <jvmFlag>-Xmx2703m</jvmFlag>
                        </jvmFlags>
                    </container>
                </configuration>
            </plugin>

            <!--            <plugin>-->
            <!--                <groupId>com.spotify</groupId>-->
            <!--                <artifactId>docker-maven-plugin</artifactId>-->
            <!--                <version>1.0.0</version>-->
            <!--                &lt;!&ndash; Wire up to the default build phases &ndash;&gt;-->
            <!--                <executions>-->
            <!--                    <execution>-->
            <!--                        <id>default</id>-->
            <!--                        <goals>-->
            <!--                            <goal>build</goal>-->
            <!--                            <goal>push</goal>-->
            <!--                        </goals>-->
            <!--                    </execution>-->
            <!--                </executions>-->
            <!--                <configuration>-->
            <!--                    <repository>${project.artifactId}</repository>-->
            <!--                    <buildArgs>-->
            <!--                        <JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>-->
            <!--                    </buildArgs>-->
            <!--                </configuration>-->
            <!--                <dependencies>-->
            <!--                    &lt;!&ndash; To make this work on JDK 9+ &ndash;&gt;-->
            <!--                    <dependency>-->
            <!--                        <groupId>javax.activation</groupId>-->
            <!--                        <artifactId>javax.activation-api</artifactId>-->
            <!--                        <version>1.2.0</version>-->
            <!--                    </dependency>-->
            <!--                </dependencies>-->
            <!--            </plugin>-->

            <!--            <plugin>-->
            <!--                <groupId>org.codehaus.mojo</groupId>-->
            <!--                <artifactId>exec-maven-plugin</artifactId>-->
            <!--                <version>3.0.0</version>-->
            <!--                <executions>-->
            <!--                    &lt;!&ndash; Remove existing image from local repo &ndash;&gt;-->
            <!--                    <execution>-->
            <!--                        <id>docker-clean</id>-->
            <!--                        <phase>install</phase>-->
            <!--                        <goals>-->
            <!--                            <goal>exec</goal>-->
            <!--                        </goals>-->
            <!--                        <configuration>-->
            <!--                            <executable>docker</executable>-->
            <!--                            <workingDirectory>${project.basedir}</workingDirectory>-->
            <!--                            <arguments>-->
            <!--                                <argument>rmi</argument>-->
            <!--                                <argument>${project.groupId}/${project.artifactId}:${project.version}</argument>-->
            <!--                            </arguments>-->
            <!--                        </configuration>-->
            <!--                    </execution>-->
            <!--                    &lt;!&ndash;-->
            <!--                      Create new docker image using Dockerfile which must be present in current working directory.-->
            <!--                      Tag the image using maven project version information.-->
            <!--                    &ndash;&gt;-->
            <!--                    <execution>-->
            <!--                        <id>docker-build</id>-->
            <!--                        <phase>install</phase>-->
            <!--                        <goals>-->
            <!--                            <goal>exec</goal>-->
            <!--                        </goals>-->
            <!--                        <configuration>-->
            <!--                            <executable>docker</executable>-->
            <!--                            <workingDirectory>${project.basedir}</workingDirectory>-->
            <!--                            <arguments>-->
            <!--                                <argument>build</argument>-->
            <!--                                <argument>-t</argument>-->
            <!--                                <argument>${project.groupId}/${project.artifactId}:${project.version}</argument>-->
            <!--                                <argument>.</argument>-->
            <!--                            </arguments>-->
            <!--                        </configuration>-->
            <!--                    </execution>-->
            <!--                    &lt;!&ndash; Login and Push the image to a docker repo. &ndash;&gt;-->
            <!--                    <execution>-->
            <!--                        <id>docker-login</id>-->
            <!--                        <phase>deploy</phase>-->
            <!--                        <goals>-->
            <!--                            <goal>exec</goal>-->
            <!--                        </goals>-->
            <!--                        <configuration>-->
            <!--                            <executable>docker</executable>-->
            <!--                            <workingDirectory>${project.basedir}</workingDirectory>-->
            <!--                            <arguments>-->
            <!--                                <argument>login</argument>-->
            <!--                                <argument>-u</argument>-->
            <!--                                <argument>${docker.user}</argument>-->
            <!--                                <argument>-p</argument>-->
            <!--                                <argument>${docker.password}</argument>-->
            <!--                                <argument>${docker.url}</argument>-->
            <!--                            </arguments>-->
            <!--                        </configuration>-->
            <!--                    </execution>-->
            <!--                    <execution>-->
            <!--                        <id>docker-push</id>-->
            <!--                        <phase>deploy</phase>-->
            <!--                        <goals>-->
            <!--                            <goal>exec</goal>-->
            <!--                        </goals>-->
            <!--                        <configuration>-->
            <!--                            <executable>docker</executable>-->
            <!--                            <workingDirectory>${project.basedir}</workingDirectory>-->
            <!--                            <arguments>-->
            <!--                                <argument>push</argument>-->
            <!--                                <argument>${project.groupId}/${project.artifactId}:${project.version}</argument>-->
            <!--                            </arguments>-->
            <!--                        </configuration>-->
            <!--                    </execution>-->
            <!--                </executions>-->
            <!--            </plugin>-->

        </plugins>
    </build>

</project>
